// NOTE:
//   This file is automatically generated.
//   Any manual changes will be lost on next update.

import imgui_base;

extern(C++, ImGui):

//version(Windows) pragma(mangle, "?Combo@ImGui@@YA_NPEBDPEAH0H@Z") //bool __cdecl ImGui::Combo(char const *,int *,char const *,int) 
//version(Windows) pragma(mangle, "?Combo@ImGui@@YA_NPEBDPEAHP6A_NPEAXHPEAPEBD@Z2HH@Z") //bool __cdecl ImGui::Combo(char const *,int *,bool (__cdecl*)(void *,int,char const * *),void *,int,int) 
version(Windows) pragma(mangle, "?Combo@ImGui@@YA_NPEBDPEAHQEBQEBDHH@Z") //bool __cdecl ImGui::Combo(char const *,int *,char const * const * const,int,int) 
  bool Combo(const(char)* label, int* current_item, const(const(const(char)*)*) items, int items_count, int popup_max_height_in_items = -1); else
bool Combo(const(char)* label, int* current_item, const(const(const(char)*)*) items, int items_count, int popup_max_height_in_items = -1);

version(Windows) pragma(mangle, "?DragFloat2@ImGui@@YA_NPEBDQEAMMMM0M@Z") //bool __cdecl ImGui::DragFloat2(char const *,float * const,float,float,float,char const *,float) 
  bool DragFloat2(const(char)* label, float* /*const*/ v, float v_speed = 1.0f, float v_min = 0.0f, float v_max = 0.0f, const(char)* format = "%.3f", float power = 1.0f); else
bool DragFloat2(const(char)* label, float* /*const*/ v, float v_speed = 1.0f, float v_min = 0.0f, float v_max = 0.0f, const(char)* format = "%.3f", float power = 1.0f);

version(Windows) pragma(mangle, "?DragFloat3@ImGui@@YA_NPEBDQEAMMMM0M@Z") //bool __cdecl ImGui::DragFloat3(char const *,float * const,float,float,float,char const *,float) 
  bool DragFloat3(const(char)* label, float* /*const*/ v, float v_speed = 1.0f, float v_min = 0.0f, float v_max = 0.0f, const(char)* format = "%.3f", float power = 1.0f); else
bool DragFloat3(const(char)* label, float* /*const*/ v, float v_speed = 1.0f, float v_min = 0.0f, float v_max = 0.0f, const(char)* format = "%.3f", float power = 1.0f);

version(Windows) pragma(mangle, "?DragFloat4@ImGui@@YA_NPEBDQEAMMMM0M@Z") //bool __cdecl ImGui::DragFloat4(char const *,float * const,float,float,float,char const *,float) 
  bool DragFloat4(const(char)* label, float* /*const*/ v, float v_speed = 1.0f, float v_min = 0.0f, float v_max = 0.0f, const(char)* format = "%.3f", float power = 1.0f); else
bool DragFloat4(const(char)* label, float* /*const*/ v, float v_speed = 1.0f, float v_min = 0.0f, float v_max = 0.0f, const(char)* format = "%.3f", float power = 1.0f);

version(Windows) pragma(mangle, "?DragInt2@ImGui@@YA_NPEBDQEAHMHH0@Z") //bool __cdecl ImGui::DragInt2(char const *,int * const,float,int,int,char const *) 
  bool DragInt2(const(char)* label, int* /*const*/ v, float v_speed = 1.0f, int v_min = 0, int v_max = 0, const(char)* format = "%d"); else
bool DragInt2(const(char)* label, int* /*const*/ v, float v_speed = 1.0f, int v_min = 0, int v_max = 0, const(char)* format = "%d");

version(Windows) pragma(mangle, "?DragInt3@ImGui@@YA_NPEBDQEAHMHH0@Z") //bool __cdecl ImGui::DragInt3(char const *,int * const,float,int,int,char const *) 
  bool DragInt3(const(char)* label, int* /*const*/ v, float v_speed = 1.0f, int v_min = 0, int v_max = 0, const(char)* format = "%d"); else
bool DragInt3(const(char)* label, int* /*const*/ v, float v_speed = 1.0f, int v_min = 0, int v_max = 0, const(char)* format = "%d");

version(Windows) pragma(mangle, "?DragInt4@ImGui@@YA_NPEBDQEAHMHH0@Z") //bool __cdecl ImGui::DragInt4(char const *,int * const,float,int,int,char const *) 
  bool DragInt4(const(char)* label, int* /*const*/ v, float v_speed = 1.0f, int v_min = 0, int v_max = 0, const(char)* format = "%d"); else
bool DragInt4(const(char)* label, int* /*const*/ v, float v_speed = 1.0f, int v_min = 0, int v_max = 0, const(char)* format = "%d");

version(Windows) pragma(mangle, "?InputFloat2@ImGui@@YA_NPEBDQEAM0H@Z") //bool __cdecl ImGui::InputFloat2(char const *,float * const,char const *,int) 
//version(Windows) pragma(mangle, "?InputFloat2@ImGui@@YA_NPEBDQEAMHH@Z") //bool __cdecl ImGui::InputFloat2(char const *,float * const,int,int) 
  bool InputFloat2(const(char)* label, float* /*const*/ v, const(char)* format = "%.3f", ImGuiInputTextFlags extra_flags = 0); else
bool InputFloat2(const(char)* label, float* /*const*/ v, const(char)* format = "%.3f", ImGuiInputTextFlags extra_flags = 0);

version(Windows) pragma(mangle, "?InputFloat3@ImGui@@YA_NPEBDQEAM0H@Z") //bool __cdecl ImGui::InputFloat3(char const *,float * const,char const *,int) 
//version(Windows) pragma(mangle, "?InputFloat3@ImGui@@YA_NPEBDQEAMHH@Z") //bool __cdecl ImGui::InputFloat3(char const *,float * const,int,int) 
  bool InputFloat3(const(char)* label, float* /*const*/ v, const(char)* format = "%.3f", ImGuiInputTextFlags extra_flags = 0); else
bool InputFloat3(const(char)* label, float* /*const*/ v, const(char)* format = "%.3f", ImGuiInputTextFlags extra_flags = 0);

version(Windows) pragma(mangle, "?InputFloat4@ImGui@@YA_NPEBDQEAM0H@Z") //bool __cdecl ImGui::InputFloat4(char const *,float * const,char const *,int) 
//version(Windows) pragma(mangle, "?InputFloat4@ImGui@@YA_NPEBDQEAMHH@Z") //bool __cdecl ImGui::InputFloat4(char const *,float * const,int,int) 
  bool InputFloat4(const(char)* label, float* /*const*/ v, const(char)* format = "%.3f", ImGuiInputTextFlags extra_flags = 0); else
bool InputFloat4(const(char)* label, float* /*const*/ v, const(char)* format = "%.3f", ImGuiInputTextFlags extra_flags = 0);

version(Windows) pragma(mangle, "?InputInt2@ImGui@@YA_NPEBDQEAHH@Z") //bool __cdecl ImGui::InputInt2(char const *,int * const,int) 
  bool InputInt2(const(char)* label, int* /*const*/ v, ImGuiInputTextFlags extra_flags = 0); else
bool InputInt2(const(char)* label, int* /*const*/ v, ImGuiInputTextFlags extra_flags = 0);

version(Windows) pragma(mangle, "?InputInt3@ImGui@@YA_NPEBDQEAHH@Z") //bool __cdecl ImGui::InputInt3(char const *,int * const,int) 
  bool InputInt3(const(char)* label, int* /*const*/ v, ImGuiInputTextFlags extra_flags = 0); else
bool InputInt3(const(char)* label, int* /*const*/ v, ImGuiInputTextFlags extra_flags = 0);

version(Windows) pragma(mangle, "?InputInt4@ImGui@@YA_NPEBDQEAHH@Z") //bool __cdecl ImGui::InputInt4(char const *,int * const,int) 
  bool InputInt4(const(char)* label, int* /*const*/ v, ImGuiInputTextFlags extra_flags = 0); else
bool InputInt4(const(char)* label, int* /*const*/ v, ImGuiInputTextFlags extra_flags = 0);

version(Windows) pragma(mangle, "?SliderFloat2@ImGui@@YA_NPEBDQEAMMM0M@Z") //bool __cdecl ImGui::SliderFloat2(char const *,float * const,float,float,char const *,float) 
  bool SliderFloat2(const(char)* label, float* /*const*/ v, float v_min, float v_max, const(char)* format = "%.3f", float power = 1.0f); else
bool SliderFloat2(const(char)* label, float* /*const*/ v, float v_min, float v_max, const(char)* format = "%.3f", float power = 1.0f);

version(Windows) pragma(mangle, "?SliderFloat3@ImGui@@YA_NPEBDQEAMMM0M@Z") //bool __cdecl ImGui::SliderFloat3(char const *,float * const,float,float,char const *,float) 
  bool SliderFloat3(const(char)* label, float* /*const*/ v, float v_min, float v_max, const(char)* format = "%.3f", float power = 1.0f); else
bool SliderFloat3(const(char)* label, float* /*const*/ v, float v_min, float v_max, const(char)* format = "%.3f", float power = 1.0f);

version(Windows) pragma(mangle, "?SliderFloat4@ImGui@@YA_NPEBDQEAMMM0M@Z") //bool __cdecl ImGui::SliderFloat4(char const *,float * const,float,float,char const *,float) 
  bool SliderFloat4(const(char)* label, float* /*const*/ v, float v_min, float v_max, const(char)* format = "%.3f", float power = 1.0f); else
bool SliderFloat4(const(char)* label, float* /*const*/ v, float v_min, float v_max, const(char)* format = "%.3f", float power = 1.0f);

version(Windows) pragma(mangle, "?SliderInt2@ImGui@@YA_NPEBDQEAHHH0@Z") //bool __cdecl ImGui::SliderInt2(char const *,int * const,int,int,char const *) 
  bool SliderInt2(const(char)* label, int* /*const*/ v, int v_min, int v_max, const(char)* format = "%d"); else
bool SliderInt2(const(char)* label, int* /*const*/ v, int v_min, int v_max, const(char)* format = "%d");

version(Windows) pragma(mangle, "?SliderInt3@ImGui@@YA_NPEBDQEAHHH0@Z") //bool __cdecl ImGui::SliderInt3(char const *,int * const,int,int,char const *) 
  bool SliderInt3(const(char)* label, int* /*const*/ v, int v_min, int v_max, const(char)* format = "%d"); else
bool SliderInt3(const(char)* label, int* /*const*/ v, int v_min, int v_max, const(char)* format = "%d");

version(Windows) pragma(mangle, "?SliderInt4@ImGui@@YA_NPEBDQEAHHH0@Z") //bool __cdecl ImGui::SliderInt4(char const *,int * const,int,int,char const *) 
  bool SliderInt4(const(char)* label, int* /*const*/ v, int v_min, int v_max, const(char)* format = "%d"); else
bool SliderInt4(const(char)* label, int* /*const*/ v, int v_min, int v_max, const(char)* format = "%d");

version(Windows) pragma(mangle, "?ColorEdit3@ImGui@@YA_NPEBDQEAMH@Z") //bool __cdecl ImGui::ColorEdit3(char const *,float * const,int) 
  bool ColorEdit3(const(char)* label, float* /*const*/ col, ImGuiColorEditFlags flags = 0); else
bool ColorEdit3(const(char)* label, float* /*const*/ col, ImGuiColorEditFlags flags = 0);

version(Windows) pragma(mangle, "?ColorEdit4@ImGui@@YA_NPEBDQEAMH@Z") //bool __cdecl ImGui::ColorEdit4(char const *,float * const,int) 
  bool ColorEdit4(const(char)* label, float* /*const*/ col, ImGuiColorEditFlags flags = 0); else
bool ColorEdit4(const(char)* label, float* /*const*/ col, ImGuiColorEditFlags flags = 0);

version(Windows) pragma(mangle, "?ColorPicker3@ImGui@@YA_NPEBDQEAMH@Z") //bool __cdecl ImGui::ColorPicker3(char const *,float * const,int) 
  bool ColorPicker3(const(char)* label, float* /*const*/ col, ImGuiColorEditFlags flags = 0); else
bool ColorPicker3(const(char)* label, float* /*const*/ col, ImGuiColorEditFlags flags = 0);

version(Windows) pragma(mangle, "?ColorPicker4@ImGui@@YA_NPEBDQEAMHPEBM@Z") //bool __cdecl ImGui::ColorPicker4(char const *,float * const,int,float const *) 
  bool ColorPicker4(const(char)* label, float* /*const*/ col, ImGuiColorEditFlags flags = 0, const(float)* ref_col = null); else
bool ColorPicker4(const(char)* label, float* /*const*/ col, ImGuiColorEditFlags flags = 0, const(float)* ref_col = null);

version(Windows) pragma(mangle, "?ColorButton@ImGui@@YA_NPEBDAEBUImVec4@@HUImVec2@@@Z") //bool __cdecl ImGui::ColorButton(char const *,struct ImVec4 const &,int,struct ImVec2) 
  bool ColorButton(const(char)* desc_id, const ref ImVec4 col, ImGuiColorEditFlags flags = 0, ImVec2 size = ImVec2(0,0)); else
bool ColorButton(const(char)* desc_id, const ref ImVec4 col, ImGuiColorEditFlags flags = 0, ImVec2 size = ImVec2(0,0));

